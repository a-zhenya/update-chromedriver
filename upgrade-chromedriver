#!/bin/sh

set -ue

DOWNLOAD_DIR="/tmp"
DEFAULT_TARGET_DIR="$HOME/.local/bin"
DRY=0
DOWNLOAD_ONLY=0
TARGET_DIR=""
CHROME_VERSION=""
USE_APT=0
LEAVE_ZIP_ON_FAILURE=0
PLATFORM=linux64
FORCE=0

usage() {
    cat <<EOF
Usage: $(basename $0) [OPTIONS]

Options:
  --dry                     Only check if an update is needed, do not install
  --download-only           Download the archive but do not install
  --leave-zip-on-failure    Do not delete archive if install fails
  -t, --target-dir DIR      Where to install chromedriver
  -d, --download-dir DIR    Where to download archive
  -v, --version VERSION     Use this Chrome version (implies --dry). Can be specified without key
  --apt                     Use version from apt (implies --dry)
  --platform PLATFORM       Specify platform (default = linux64, the key implies --download-only)
                            Variants: linux64, mac-arm64, mac-x64, win32, win64
  -f, --force               Always download
  -h, --help                Show this help
EOF
    exit 1
}

UNGUARDED_VERSION=0
while [ $# -gt 0 ]; do
    case "$1" in
        --dry)
            DRY=1
            DOWNLOAD_ONLY=0
            ;;
        --download-only)
            DOWNLOAD_ONLY=1
            ;;
        --leave-zip-on-failure)
            LEAVE_ZIP_ON_FAILURE=1
            ;;
        -t|--target-dir)
            shift
            TARGET_DIR="$1"
            ;;
        -d|--download-dir)
            shift
            DOWNLOAD_DIR="$1"
            ;;
        -v|--version)
            shift
            CHROME_VERSION="$1"
            DRY=1
            ;;
        -f|--force)
            FORCE=1
            ;;
        --platform)
            shift
            PLATFORM="$1"
            DOWNLOAD_ONLY=1
            FORCE=1
            ;;
        --apt)
            USE_APT=1
            DRY=1
            ;;
        -h|--help)
            usage
            ;;
        *)
            if [ "$UNGUARDED_VERSION" = 1 ]; then
               usage
            fi
            UNGUARDED_VERSION=1
            CHROME_VERSION="$1"
            DRY=1
            ;;
    esac
    shift
done

TOOLS_MISSING=0
for tool in curl jq unzip; do
    if ! command -v "$tool" >/dev/null 2>&1; then
        echo "Error: Required tool '$tool' is not installed"
        TOOLS_MISSING=1
    fi
done
if [ "$TOOLS_MISSING" = 1 ]; then
    exit 1
fi

# Determine Chrome version
if [ "$USE_APT" = 1 ]; then
    CHROME_VERSION=$(apt-get --just-print upgrade | grep "Conf google-chrome-stable" || [ $? -eq 1 ])
    if [ -z "$CHROME_VERSION" ]; then
        echo "Cannot find the upgradable google-chrome-stable"
        exit 0
    fi
    CHROME_VERSION=$(echo $CHROME_VERSION | grep -Eo '[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+')
    version_source="APT cache"
elif [ -z "$CHROME_VERSION" ]; then
    CHROME_VERSION=$(google-chrome --version | cut -d ' ' -f 3)
    version_source="Installed Chrome"
else
    version_source="Command line"
fi

echo "Chrome version = $CHROME_VERSION ($version_source)"

# Check existing chromedriver
if [ "$FORCE" != 1 ] && command -v chromedriver >/dev/null 2>&1; then
    INSTALLED_VERSION=$(chromedriver --version | cut -d ' ' -f 2)
    if [ "$CHROME_VERSION" = "$INSTALLED_VERSION" ]; then
        echo "Chromedriver $INSTALLED_VERSION already installed"
        exit 0
    else
        if [ "$DRY" = 1 ]; then
            echo "Driver $INSTALLED_VERSION. Checking if an update available"
        else
            echo "Current driver $INSTALLED_VERSION. Replacing"
        fi
    fi
fi

# Get download URL
API="https://googlechromelabs.github.io/chrome-for-testing/known-good-versions-with-downloads.json"
URL=$(curl -s "$API" |
    jq -r --arg PLATFORM "$PLATFORM" --arg VERSION "$CHROME_VERSION" \
        '.versions[] | select(.version==$VERSION).downloads.chromedriver[] | select(.platform==$PLATFORM).url')

if [ -z "$URL" ]; then
    echo "Could not find downloadable chromedriver $CHROME_VERSION"
    exit 1
fi

echo "Download URL: $URL"

if [ "$DRY" = 1 ]; then
    echo "Found downloadable chromedriver $CHROME_VERSION"
    if [ "$DOWNLOAD_ONLY" != 1 ]; then
        exit 0
    fi
fi

# Download driver
ZIP_PATH="${DOWNLOAD_DIR}/chromedriver-${PLATFORM}-${CHROME_VERSION}.zip"
echo "Downloading chromedriver to $ZIP_PATH..."
set +e
curl -sL -o "$ZIP_PATH" "$URL"
curl_status=$?
set -e

if [ $curl_status -ne 0 ] || [ ! -f "$ZIP_PATH" ]; then
    echo "Failed to download chromedriver"
    exit 1
fi

echo "Download complete: $ZIP_PATH"

if [ "$DOWNLOAD_ONLY" = 1 ]; then
    exit 0
fi

# Install driver
if [ -z "$TARGET_DIR" ]; then
    if command -v chromedriver >/dev/null 2>&1; then
        TARGET_DIR=$(dirname "$(command -v chromedriver)")
    else
        if [ -d "$DEFAULT_TARGET_DIR" ]; then
            TARGET_DIR="$DEFAULT_TARGET_DIR"
        else
            TARGET_DIR="$DOWNLOAD_DIR"
        fi
        echo "No current chromedriver found. Installing to $TARGET_DIR"
    fi
fi

echo "Installing chromedriver to $TARGET_DIR..."

if unzip -d "$TARGET_DIR" -o -j "$ZIP_PATH" "*/chromedriver" >/dev/null; then
    rm "$ZIP_PATH"
    ls -lh "$TARGET_DIR/chromedriver"
    echo "chromedriver $CHROME_VERSION installed to $TARGET_DIR/chromedriver"
else
    echo "Failed to extract chromedriver"
    if [ "$LEAVE_ZIP_ON_FAILURE" = 1 ]; then
        echo "Leaving ZIP archive at $ZIP_PATH"
    else
        rm "$ZIP_PATH"
    fi
    exit 1
fi
